{"version":3,"sources":["components/DataDetailsModal/index.tsx","components/LoadData/index.tsx","components/Maps/index.tsx","key.ts","components/Multimapa/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["blocks","blockName","fields","DataDetailsModal","_ref","close","data","react_default","a","createElement","lib_default","isOpen","ariaHideApp","style","overlay","zIndex","content","maxHeight","maxWidth","top","left","right","bottom","marginRight","transform","overflow","className","alignSelf","cursor","onClick","react_fontawesome_index_es","icon","map","_ref2","key","field","transformData","id","Object","objectSpread","LoadData","setData","fileRef","useRef","_useState","useState","_useState2","slicedToArray","setFileName","_useState3","_useState4","setLoading","display","accept","type","ref","onChange","event","target","files","file","name","reader","FileReader","readAsBinaryString","onload","result","workbook","XLSX","read","firstSheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","current","click","filterIsPositive","filter","index","value","Number","reduce","acc","cur","filterIsAutoctone","filters","Maps","_ref3","markerClusterer","_ref3$chosenFiltersDe","chosenFiltersDefault","_ref3$showClusterDefa","showClusterDefault","openDataDetailsModal","mapRef","chosenFilters","setChosenFilters","setMap","_useState5","_useState6","showCluster","setShowCluster","markers","useEffect","forEach","marker","clearMarkers","showClusterOnChange","umd","allowZeroExpanded","preExpanded","uuid","checked","_ref4","filterName","cf","find","concat","toConsumableArray","es","params","libraries","render","googleMaps","filtersNameToBeApplied","Map","center","lat","lng","mapTypeControl","zoom","filtersNameToBeAppliedName","d","position","LatLng","latitude","longitude","Marker","addListener","e","MarkerClusterer","imagePath","Multimapa","dataDetails","setDataDetails","length","components_LoadData","components_DataDetailsModal","components_Maps","library","add","faAngleDown","faBars","faSearch","faTimes","App","components_Multimapa","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03e83b13.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-modal';\n\nimport { Data } from '../../interfaces/data';\n\nimport './styles.scss';\n\ninterface Block {\n  blockName: string;\n  fields: Array<keyof Data>;\n}\n\nconst blocks: Block[] = [\n  {\n    blockName: 'Localização',\n    fields: ['NM_LOGRADO', 'NU_NUMERO', 'NM_COMPLEM', 'NM_BAIRRO']\n  },\n  {\n    blockName: 'Paciente',\n    fields: [\n      'DT_NOTIFIC',\n      'SEM_NOT',\n      'ID_UNIDADE',\n      'DT_SIN_PRI',\n      'SEM_PRI',\n      'NU_IDADE_N',\n      'CS_SEXO',\n      'CS_GESTANT'\n    ]\n  },\n  {\n    blockName: 'Clínico',\n    fields: ['HOSPITALIZ', 'TPAUTOCTO', 'CLASSI_FIN']\n  }\n];\n\nconst DataDetailsModal: React.FC<{\n  close: () => void;\n  data: Data | null;\n}> = ({ close, data }) => {\n  return (\n    <Modal\n      isOpen={!!data}\n      ariaHideApp={false}\n      style={{\n        overlay: { zIndex: 99 },\n        content: {\n          zIndex: 99,\n          maxHeight: '90vh',\n          maxWidth: '90vw',\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          overflow: 'auto'\n        }\n      }}\n    >\n      <div className=\"DataDetailsModal\">\n        <span\n          style={{ alignSelf: 'flex-end', cursor: 'pointer' }}\n          onClick={close}\n        >\n          <FontAwesomeIcon icon=\"times\" />\n        </span>\n        <span className=\"modal-title\">Detalhes</span>\n        {!!data &&\n          blocks.map(({ blockName, fields }) => (\n            <div key={blockName} className=\"block\">\n              <span className=\"block-title\">{blockName}</span>\n              <ul>\n                {fields.map(field => (\n                  <li key={field} className=\"block-line\">\n                    <span className=\"field\">{field}:</span>\n                    <span className=\"field-value\">\n                      {!!data[field] ? data[field] : '-'}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        <button className=\"button\" onClick={close}>\n          Fechar\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default DataDetailsModal;\n","import React, { useRef, useState } from 'react';\n\nimport XLSX from 'xlsx';\n\nimport { Data, LoadedData } from '../../interfaces/data';\n\nimport './styles.scss';\n\ninterface Props {\n  setData: React.Dispatch<React.SetStateAction<Array<Data>>>;\n}\n\nconst transformData = (data: LoadedData, id: number): Data => {\n  return { ...data, id };\n};\n\nconst LoadData: React.FC<Props> = ({ setData }) => {\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const openFileOnClick = () => {\n    if (fileRef && fileRef.current) {\n      fileRef.current.click();\n    }\n  };\n\n  const fileInputOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!!!event.target.files) {\n      return;\n    }\n\n    setLoading(true);\n\n    const file = event.target.files[0];\n    setFileName(file.name);\n\n    const reader = new FileReader();\n    reader.readAsBinaryString(file);\n    reader.onload = () => {\n      const data = reader.result;\n      const workbook = XLSX.read(data, { type: 'binary' });\n      const firstSheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[firstSheetName];\n\n      const json = XLSX.utils\n        .sheet_to_json<LoadedData>(worksheet)\n        .map(transformData);\n\n      setLoading(false);\n      setData(json);\n    };\n  };\n\n  return (\n    <div className=\"LoadData\">\n      <input\n        style={{ display: 'none' }}\n        accept=\".xlsx, .xls, .csv\"\n        type=\"file\"\n        id=\"fileInput\"\n        ref={fileRef}\n        onChange={fileInputOnChange}\n      />\n      <button onClick={openFileOnClick}>Carregar Dados</button>\n    </div>\n  );\n};\n\nexport default LoadData;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemPanel,\n  AccordionItemButton\n} from 'react-accessible-accordion';\nimport ReactGoogleMapLoader from 'react-google-maps-loader';\n\nimport { key } from '../../key';\n\nimport { Data } from '../../interfaces/data';\n\nimport './styles.scss';\n\ndeclare var MarkerClusterer: any;\n\ntype FilterNames = 'Positivo' | 'Autóctone' | 'Não Autóctone';\n\ninterface Filter {\n  name: FilterNames;\n  filter: (data: Data, index: number) => boolean;\n}\n\ninterface Props {\n  chosenFiltersDefault?: FilterNames[];\n  showClusterDefault?: boolean;\n  data: Data[];\n  openDataDetailsModal: (data: Data) => void;\n}\n\nconst blueMarker = 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png';\nconst yellowMarker = 'https://maps.google.com/mapfiles/ms/icons/yellow-dot.png';\nconst greenMarker = 'https://maps.google.com/mapfiles/ms/icons/green-dot.png';\n\nconst markerColor = (data: Data) => {\n  if (!filterIsPositive.filter(data, 0)) {\n    return blueMarker;\n  } else {\n    if (filterIsAutoctone.filter(data, 0)) {\n      return yellowMarker;\n    } else {\n      return greenMarker;\n    }\n  }\n};\n\nconst filterIsPositive: Filter = {\n  name: 'Positivo',\n  filter: (data, index) => {\n    const cols = [\n      'RESUL_PRNT',\n      'RESUL_SORO',\n      'RESUL_NS1',\n      'RESUL_VI_N',\n      'RESUL_PCR_',\n      'HISTOPA_N',\n      'IMUNOH_N'\n    ].map(value => {\n      return Number(data[value as keyof Data]) === 1;\n    });\n    const res = cols.reduce((acc, cur) => acc || cur, false);\n    return res;\n  }\n};\n\nconst filterIsAutoctone: Filter = {\n  name: 'Autóctone',\n  filter: (data, index) => {\n    return Number(data['TPAUTOCTO']) === 1;\n  }\n};\n\nconst filterIsNotAutoctone: Filter = {\n  name: 'Não Autóctone',\n  filter: (data, index) => {\n    return Number(data['TPAUTOCTO']) !== 1;\n  }\n};\n\nconst filters: Filter[] = [\n  filterIsPositive,\n  filterIsAutoctone,\n  filterIsNotAutoctone\n];\n\nconst applyFilters = (filtersNameToBeApplied: FilterNames[]) => (\n  data: Data,\n  index: number\n): boolean => {\n  const filtersToBeApplied: Filter[] = filters.filter(({ name }) => {\n    const existsFiltersNameToBeApplied = filtersNameToBeApplied.find(\n      filtersNameToBeAppliedName => filtersNameToBeAppliedName === name\n    );\n    return !!existsFiltersNameToBeApplied;\n  });\n\n  return filtersToBeApplied.reduce<boolean>((acc, { filter }) => {\n    return acc && filter(data, index);\n  }, true);\n};\n\nconst Maps: React.FC<Props> = ({\n  chosenFiltersDefault = [],\n  data,\n  showClusterDefault = true,\n  openDataDetailsModal\n}) => {\n  const mapRef = useRef(null);\n  const [chosenFilters, setChosenFilters] = useState<FilterNames[]>(\n    chosenFiltersDefault\n  );\n  const [map, setMap] = useState<google.maps.Map>();\n  const [showCluster, setShowCluster] = useState<boolean>(showClusterDefault);\n\n  let markers: google.maps.Marker[] = [];\n  let markerClusterer: typeof MarkerClusterer;\n\n  useEffect(() => {\n    return () => {\n      markers.forEach(marker => marker.setMap(null));\n      if (!!markerClusterer) {\n        markerClusterer.clearMarkers();\n      }\n    };\n  });\n\n  const showClusterOnChange = () => {\n    setShowCluster(!showCluster);\n  };\n\n  const filterOnChange = (filterName: FilterNames) => () => {\n    setChosenFilters(cf => {\n      const filterExists = !!cf.find(filter => filter === filterName);\n      return filterExists\n        ? cf.filter(name => name !== filterName)\n        : [...cf, filterName];\n    });\n  };\n\n  const filterMenuIsChecked = (filter: string): boolean => {\n    return !!chosenFilters.find(filterName => filter === filterName);\n  };\n\n  const Menu = () => {\n    return (\n      <Accordion\n        className=\"Accordion\"\n        allowZeroExpanded={true}\n        preExpanded={['0']}\n      >\n        <AccordionItem uuid=\"0\">\n          <AccordionItemHeading>\n            <AccordionItemButton className=\"AccordionItemButton\">\n              <FontAwesomeIcon icon=\"angle-down\" />\n            </AccordionItemButton>\n          </AccordionItemHeading>\n          <AccordionItemPanel>\n            <div>\n              <input\n                onChange={showClusterOnChange}\n                type=\"checkbox\"\n                checked={showCluster}\n              />\n              <span>Mostrar Cluster</span>\n            </div>\n            {filters.map(({ name }) => {\n              return (\n                <div key={name}>\n                  <input\n                    onChange={filterOnChange(name)}\n                    type=\"checkbox\"\n                    name={name}\n                    value={name}\n                    checked={filterMenuIsChecked(name)}\n                  />\n                  <span>{name}</span>\n                </div>\n              );\n            })}\n          </AccordionItemPanel>\n        </AccordionItem>\n      </Accordion>\n    );\n  };\n\n  return (\n    <div className=\"Maps\">\n      <div className=\"menu\">\n        <Menu />\n      </div>\n      <ReactGoogleMapLoader\n        params={{ key, libraries: 'places,geometry' }}\n        render={googleMaps => {\n          if (!!googleMaps) {\n            if (!!!map) {\n              setMap(\n                new googleMaps.Map(mapRef.current, {\n                  center: { lat: -22.0087, lng: -47.8909 },\n                  mapTypeControl: false,\n                  zoom: 14\n                })\n              );\n            }\n\n            markers = data.filter(applyFilters(chosenFilters)).map(d => {\n              const position = new googleMaps.LatLng(\n                Number(d.latitude),\n                Number(d.longitude)\n              );\n              const marker = new googleMaps.Marker({\n                position,\n                map,\n                icon: markerColor(d)\n              });\n              marker.addListener('dblclick', e => {\n                openDataDetailsModal(d);\n              });\n              return marker;\n            });\n\n            if (!!map && showCluster) {\n              markerClusterer = new MarkerClusterer(map, markers, {\n                imagePath:\n                  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n              });\n            }\n          }\n\n          return <div className=\"map\" ref={mapRef} />;\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Maps;\n","export const key = 'AIzaSyA_fdJhInwwadaeFnUAe-r18Wzhx4S3-o4';\n","import React, { useState } from 'react';\n\nimport DataDetailsModal from '../DataDetailsModal';\nimport LoadData from '../LoadData';\nimport Maps from '../Maps';\n\nimport { Data } from '../../interfaces/data';\n\nimport './styles.scss';\n\nconst Multimapa: React.FC = () => {\n  const [data, setData] = useState<Array<Data>>([]);\n  const [dataDetails, setDataDetails] = useState<Data | null>(null);\n\n  const closeDataDetailsModal = () => {\n    setDataDetails(null);\n  };\n\n  if (data.length === 0) {\n    return (\n      <div className=\"LoadData\">\n        {/* <DataDetailsModal\n          data={{\n            ACIDO_PEPT: '2',\n            ARTRALGIA: '2',\n            ARTRITE: '2',\n            AUTO_IMUNE: '2',\n            CEFALEIA: '1',\n            CLASSI_FIN: '5',\n            CONJUNTVIT: '2',\n            CRITERIO: '1',\n            CS_ESCOL_N: '8',\n            CS_FLXRET: '0',\n            CS_GESTANT: '9',\n            CS_RACA: '9',\n            CS_SEXO: 'F',\n            CS_ZONA: '1',\n            DIABETES: '2',\n            DOR_COSTAS: '2',\n            DOR_RETRO: '2',\n            DT_DIGITA: 43311,\n            DT_ENCERRA: 43294,\n            DT_INVEST: 43276,\n            DT_NOTIFIC: 43276,\n            DT_SIN_PRI: 43269,\n            DT_SORO: 43276,\n            EVOLUCAO: '1',\n            EXANTEMA: '1',\n            FEBRE: '1',\n            HEMATOLOG: '2',\n            HEPATOPAT: '2',\n            HIPERTENSA: '2',\n            HISTOPA_N: '4',\n            HOSPITALIZ: '2',\n            IDENT_MICR: '0000000000004',\n            ID_AGRAVO: 'A90',\n            ID_BAIRRO: '47',\n            ID_MN_RESI: '354890',\n            ID_MUNICIP: '354890',\n            ID_OCUPA_N: '223620',\n            ID_PAIS: '1',\n            ID_REGIONA: '1337',\n            ID_RG_RESI: '1337',\n            ID_UNIDADE: '2083507',\n            IMUNOH_N: '4',\n            LACO: '2',\n            LEUCOPENIA: '2',\n            MIALGIA: '1',\n            NAUSEA: '2',\n            NM_BAIRRO: 'MONTEIRO VL',\n            NM_COMPLEM: 'APTO 203 BL 1',\n            NM_LOGRADO: 'RUA JOSE RODRIGUES SAMPAIO',\n            NU_ANO: '2018',\n            NU_DDD_TEL: '16',\n            NU_IDADE_N: 4031,\n            NU_NOTIFIC: '5709800',\n            NU_NUMERO: '177',\n            NU_TELEFON: '34131868',\n            PETEQUIA_N: '2',\n            RENAL: '2',\n            RESUL_NS1: '4',\n            RESUL_PCR_: '4',\n            RESUL_SORO: '2',\n            RESUL_VI_N: '4',\n            SEM_NOT: '201826',\n            SEM_PRI: '201825',\n            SG_UF: '35',\n            SG_UF_NOT: '35',\n            TP_NOT: '2',\n            TP_SISTEMA: '2',\n            VOMITO: '2',\n            id: 720,\n            latitude: -22.0250896,\n            longitude: -47.888052500000015\n          }}\n          close={closeDataDetailsModal}\n        /> */}\n\n        <LoadData setData={setData} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Multimapa\">\n      <DataDetailsModal data={dataDetails} close={closeDataDetailsModal} />\n      <Maps data={data} openDataDetailsModal={setDataDetails} />\n      <Maps\n        data={data}\n        showClusterDefault={false}\n        chosenFiltersDefault={['Positivo']}\n        openDataDetailsModal={setDataDetails}\n      />\n      <Maps\n        data={data}\n        showClusterDefault={false}\n        chosenFiltersDefault={['Positivo', 'Autóctone']}\n        openDataDetailsModal={setDataDetails}\n      />\n      <Maps\n        data={data}\n        showClusterDefault={false}\n        chosenFiltersDefault={['Positivo', 'Não Autóctone']}\n        openDataDetailsModal={setDataDetails}\n      />\n    </div>\n  );\n};\n\nexport default Multimapa;\n","import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleDown,\n  faBars,\n  faSearch,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Multimapa from './components/Multimapa';\n\nimport './App.scss';\n\nlibrary.add(faAngleDown, faBars, faSearch, faTimes);\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"\">\n        <span className=\"\">Multimapa App</span>\n      </header>\n      <main className=\"\">\n        <Multimapa />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}